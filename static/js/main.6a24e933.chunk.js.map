{"version":3,"sources":["AppDispatcher.js","app/actions/ActionTypes.js","app/actions/EmojiActions.js","app/Api.js","app/stores/EmojiStore.js","app/components/Filter.jsx","app/components/NotFound.jsx","app/components/Spinner.jsx","app/components/Emoji.jsx","app/components/Results.jsx","app/components/App.jsx","index.js"],"names":["Dispatcher","actionTypes","LOADED_EMOJI","SEARCH","emojiActions","load","fetch","window","location","pathname","replace","then","response","json","Object","entries","EmojiActions","loadedEmoji","emoji","AppDispatcher","dispatch","type","ActionTypes","value","search","name","storedResults","results","hasResults","state","action","this","length","filter","toLowerCase","indexOf","ReduceStore","Filter","props","isSearching","onChangeHandler","bind","onChangeTimeout","e","targetValue","target","clearTimeout","setTimeout","setState","className","onChange","placeholder","Component","NotFound","src","alt","Spinner","Emoji","isCopied","handleClickToCopy","textarea","document","createElement","innerText","textContent","getElementsByTagName","append","select","execCommand","classList","add","remove","err","console","error","copyToClipboard","currentTarget","item","content","ghcode","isEmoji","startsWith","onClick","PropTypes","array","isRequired","renderItems","map","key","Results","App","EmojiStore","getState","onEmojiStoreHandler","listener","addListener","ReactDOM","createPortal","style","fontSize","querySelector","render","getElementById","packageJson","version"],"mappings":"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","file":"static/js/main.6a24e933.chunk.js","sourcesContent":["import { Dispatcher } from 'flux';\n\nexport default new Dispatcher();\n","const actionTypes = {\n    LOADED_EMOJI: 'LOADED_EMOJI',\n    SEARCH: 'SEARCH'\n};\n\nexport default actionTypes;","import AppDispatcher from '../../AppDispatcher';\nimport ActionTypes from './ActionTypes';\nimport { load } from '../Api';\n\nconst emojiActions = {\n    load() {\n        load();\n    },\n\n    loadedEmoji(emoji) {\n        AppDispatcher.dispatch({\n            type: ActionTypes.LOADED_EMOJI,\n            value: emoji,\n        });\n    },\n\n    search(name) {\n        AppDispatcher.dispatch({\n            type: ActionTypes.SEARCH,\n            value: name,\n        });\n    },\n};\n\nexport default emojiActions;\n","import EmojiActions from './actions/EmojiActions';\n\nexport const load = () =>\n    fetch(`${window.location.pathname.replace(/\\/$/, '')}/emoji.json`)\n        .then(response => response.json())\n        .then(json => Object.entries(json))\n        .then(json => EmojiActions.loadedEmoji(json))\n","import { ReduceStore } from 'flux/utils';\nimport AppDispatcher from '../../AppDispatcher';\nimport ActionTypes from '../actions/ActionTypes';\n\nclass EmojiStore extends ReduceStore {\n    constructor() {\n        super(AppDispatcher);\n        this.storedResults = []\n    }\n\n    getInitialState() {\n        return {\n            results: [],\n            hasResults: null,\n        };\n    }\n\n    reduce(state, action) {\n        switch (action.type) {\n            case ActionTypes.LOADED_EMOJI:\n                this.storedResults = action.value;\n                return {\n                    hasResults: action.value.length > 0,\n                    results: action.value,\n                };\n\n            case ActionTypes.SEARCH:\n                return {\n                    hasResults: this.storedResults.length > 0,\n                    results: this.storedResults.filter(([name]) => {\n                        return name.toLowerCase().indexOf(action.value.toLowerCase()) >= 0;\n                    }),\n                };\n\n            default:\n                return state;\n        }\n    }\n}\n\nexport default new EmojiStore();\n","import React, { Component } from 'react';\n\nimport EmojiActions from '../actions/EmojiActions';\n\nimport './Filter.css';\n\nclass Filter extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isSearching: false,\n        };\n\n        this.onChangeHandler = this.onChangeHandler.bind(this);\n        this.onChangeTimeout = null;\n    }\n\n    onChangeHandler(e) {\n        const targetValue = e.target.value;\n        clearTimeout(this.onChangeTimeout);\n        this.onChangeTimeout = setTimeout(() => {\n            EmojiActions.search(targetValue);\n        }, 500);\n\n        this.setState({\n            isSearching: targetValue.length > 0\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"Filter\">\n                <div className=\"container\">\n                    <input className={this.state.isSearching ? 'is-searching' : ''} onChange={this.onChangeHandler} placeholder=\"Search Emoji ..\" type=\"text\" />\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Filter;\n","import React from 'react';\n\nconst NotFound = () => (\n    <div className=\"Spinner\">\n        <img src={`${window.location.pathname.replace(/\\/$/, '')}/images/dizzy_face.png`} alt=\"no results\" />\n        <div className=\"text\">no results</div>\n    </div>\n)\n\nexport default NotFound;\n","import React from 'react';\n\nimport './Spinner.css';\n\nconst Spinner = () => (\n    <div className=\"Spinner jump\">\n        <img src={`${window.location.pathname.replace(/\\/$/, '')}/images/smile.png`} alt=\"loading\" />\n        <div className=\"text\">loading</div>\n    </div>\n)\n\nexport default Spinner;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Emoji.css';\n\nclass Emoji extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isCopied: false\n        };\n\n        this.handleClickToCopy = this.handleClickToCopy.bind(this);\n    }\n\n    static get propTypes() {\n        return {\n            item: PropTypes.array.isRequired,\n        };\n    }\n\n    copyToClipboard(target) {\n        var textarea = document.createElement('textarea');\n        textarea.innerText = target.textContent;\n\n        document.getElementsByTagName('body')[0].append(textarea);\n        textarea.select();\n\n        try {\n            if (document.execCommand('copy')) {\n                target.classList.add('copied');\n            }\n\n            setTimeout(() => {\n                target.classList.remove('copied');\n            }, 2000);\n        } catch (err) {\n            console.error('Oops, unable to copy');\n        }\n\n        textarea.remove();\n    }\n\n    handleClickToCopy(e) {\n        this.copyToClipboard(e.currentTarget);\n    }\n\n    render() {\n        const [name, content] = this.props.item;\n        const ghcode = `:${name}:`;\n        const isEmoji = !content.startsWith('https://');\n        const emoji = isEmoji ? content : (\n            <img src={content} alt={name} />\n        );\n\n        return (\n            <div className={`Emoji ${ this.state.isCopied ? 'copied' : '' }`}>\n                <div className={`image ${isEmoji ? 'is-emoji': ''}`}>{emoji}</div>\n                <div className=\"name\">{ghcode}</div>\n                <div className=\"details\">\n                    <div onClick={this.handleClickToCopy} className=\"image is-emoji\"><span>{content}</span></div>\n                    <div className=\"name\" onClick={this.handleClickToCopy}>{ghcode}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Emoji;\n","import React from 'react';\n\nimport NotFound from './NotFound';\nimport Spinner from './Spinner';\nimport Emoji from './Emoji';\n\nimport './Results.css';\n\nconst renderItems = (hasResults, results) => {\n    if (hasResults === true && results.length === 0) {\n        return <NotFound />;\n    }\n\n    return results.length > 0 ? results.map((item, key) => (\n        <Emoji key={key} item={item} />\n    )) : <Spinner />;\n}\n\nconst Results = ({ hasResults, results }) => (\n    <div className=\"Results container\">\n        {renderItems(hasResults, results)}\n    </div>\n)\n\nexport default Results;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport EmojiActions from '../actions/EmojiActions';\nimport EmojiStore from '../stores/EmojiStore';\n\nimport Filter from './Filter';\nimport Results from './Results';\n\nimport './App.css';\n\nclass App extends Component {\n\n    state = {\n        emoji: EmojiStore.getState()\n    };\n\n    componentDidMount() {\n        EmojiActions.load();\n        this.listener = EmojiStore.addListener(this.onEmojiStoreHandler);\n    }\n\n    componentWillUnmount() {\n        this.listener.remove();\n    }\n\n    onEmojiStoreHandler = () => {\n        this.setState({\n            emoji: EmojiStore.getState()\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                {\n                    ReactDOM.createPortal(\n                        (\n                            <sup style={{ fontSize: '50%' }}>{ this.state.emoji.hasResults ? this.state.emoji.results.length : '' }</sup>\n                        ),\n                        document.querySelector('h1')\n                    )\n                }\n                <Filter {...this.state.emoji} />\n                <Results {...this.state.emoji} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/components/App';\n\nimport packageJson from '../package.json';\n\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\nReactDOM.render(\n    (\n        <div>\n            v {packageJson.version}\n        </div>\n    ),\n    document.getElementById('version')\n);\n"],"sourceRoot":""}